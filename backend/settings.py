"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import pymysql
pymysql.install_as_MySQLdb()
import os
from pathlib import Path
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+-$y30w6b=jrr3i@(q#j5%qze$ybj7_##2ct(k0d4gk$-406fv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    # 'sabores',
    'sabores.apps.SaboresConfig',
    #'rest_framework_simplejwt.token_blacklist',

]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    #  'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
    # 'DEFAULT_AUTHENTICATION_CLASSES': [
    #     'rest_framework.authentication.BasicAuthentication',
    #     'rest_framework.authentication.SessionAuthentication',
    # ],
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.IsAuthenticated',
        
    # ]
}


# from datetime import timedelta

# SIMPLE_JWT = {
#     "ACCESS_TOKEN_LIFETIME": timedelta(minutes=5),
#     "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
#     "ROTATE_REFRESH_TOKENS": True,
#     "BLACKLIST_AFTER_ROTATION": True,
#     "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
#     "TOKEN_BLACKLIST_ENABLED": True,
# }

MIDDLEWARE = [  
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#        'ENGINE': 'django.db.backends.mysql',
#        'NAME': 'railway',
#        'USER': 'root',
#        'PASSWORD': 'ooNKCYQLkbAkHPRVqOftNPfZolkNdIvZ',
#        'HOST': 'centerbeam.proxy.rlwy.net',  # Usa el valor real de RAILWAY_PRIVATE_DOMAIN
#        'PORT': '50274',
#     }
# }


BASE_DIR = Path(__file__).resolve().parent.parent
dotenv_path = os.path.join(BASE_DIR, '.env')

load_dotenv(dotenv_path)

SECRET_KEY = os.environ.get('QSABORES_SECRET_KEY')
DEBUG = os.environ.get('DEBUG') == 'True' # Convierte a booleano si es necesario

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get('QSABORES_DB_NAME'),
        'USER': os.environ.get('QSABORES_USER'),
        'PASSWORD': os.environ.get('QSABORES_PASSWORD'),
        'HOST': os.environ.get('QSABORES_HOST'),
        'PORT': os.environ.get('QSABORES_PORT'),
    }
}

# DATABASES = {
# 'default': {
#        'ENGINE': 'django.db.backends.mysql',
#        'NAME': 'sabores_dev',
#        'USER': 'root',
#        'PASSWORD': 'root',
#        'HOST': '127.0.0.1',  # Usa el valor real de RAILWAY_PRIVATE_DOMAIN
#        'PORT': '3306',
#     }
# }

# 'default': {
#        'ENGINE': 'django.db.backends.mysql',
#        'NAME': 'sabores_dev',
#        'USER': 'root',
#        'PASSWORD': 'root',
#        'HOST': '127.0.0.1',  # Usa el valor real de RAILWAY_PRIVATE_DOMAIN
#        'PORT': '3306',
#     }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# lista de servidores que se pueden conectar a django 
CORS_ALLOWED_ORIGINS = [
    'http://localhost:5173',  # Si est√°s desarrollando en local
    'http://qsabores-frontend-wxxsbr-6d0816-72-60-26-170.traefik.me',
    'qsabores.shop'
]

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    'api.qsabores.shop',
]
